let values = ./../resources/package.dh

let types = ./../resources/types.dh

let config =
        { cmds =
            [ { name =
                  "cat"
              , args =
                  [ "./prefile" ] : List Text
              , out =
                  { filename = "toto.out", filecheck = values.emptyCheck }
              , err =
                  { filename = "toto.err", filecheck = values.emptyCheck }
              , postchecks =
                  [] : List types.FileCheck
              , vars =
                  [] : List types.EnvVar
              , passvars =
                  [] : List Text
              , timeout =
                  [] : Optional Natural
              , otherwd =
                  [] : Optional Text
              }
            , { name =
                  "echo"
              , args =
                  [ "Error" ] : List Text
              , out =
                  { filename = "tata.out", filecheck = values.emptyCheck }
              , err =
                  { filename = "tata.err", filecheck = values.emptyCheck }
              , postchecks =
                  [] : List types.FileCheck
              , vars =
                  [] : List types.EnvVar
              , passvars =
                  [] : List Text
              , timeout =
                  [] : Optional Natural
              , otherwd =
                  [] : Optional Text
              }
            ]
        , verbose =
            False
        , cleaning =
            False
        , workdir =
            "./_dhrun_out"
        , pre =
            [ "echo toto > ./prefile" ] : List Text
        , post =
            [ "echo tata > ./postfile" ] : List Text
        }
      : types.Config

in  config
